<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark" 
		remove="exit(event)" creationComplete="created(event)"
		xmlns:components="views.components.*"
		xmlns:local="*"
		xmlns:maskedinput="views.components.maskedinput.*"  >
	
	<fx:Script>
		<![CDATA[
			import com.utils.Console;
			
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import events.KioskError;
			import events.KioskProgressEvent;
			import events.UserEvent;
			import events.ViewEvent;
			
			import model.Settings;
			
			[Bindable]
			private var settings:Settings;
			
			private var gameId:Number;
			private var maxScore:Number;

			public function created(event:FlexEvent=null):void
			{
				trace("scorecapture creationcomplete");
				
				this.addEventListener( Event.INIT, init);
				//powerValue.initialise("___._", "_");
				

			}

			public function init(event:Event=null):void
			{
				trace("scorecapture init event");
				settings = Settings.instance;
				gameId = this.parentApplication.ApplicationType=="SCOREGAME1"?1:2;
				getPrefs.url=this.parentApplication.localURL+'/api/index.php/skytestlab/v1/preferences/';
				getPrefs.send();
				scoreValue.text = "";
				//powerValue.reset();
				//theUserName.text=settings.userData.firstName+" "+settings.userData.lastName;
			}
			
			protected function exit(e:Event=null):void
			{
			}
			
			protected function submitHandler(event : MouseEvent, gameID : int, score : String) : void
			{
				var variables : Object = {};
				if(score.indexOf("_")!=-1) {
					this.parentApplication.dispatchEvent(new KioskError(KioskError.ERROR, "Wrong score format.\r\nFormat is 999.9 - please do not leave any underscore sign", "ERROR"));
	
				} else if (parseInt(score)<0 || parseInt(score)>maxScore || parseInt(score)==NaN) {
					this.parentApplication.dispatchEvent(new KioskError(KioskError.ERROR, "Score is a number and ranges from 0 to "+maxScore.toString(), "ERROR"));

				} else if(score.length>0) {

					variables.urn = settings.userData.urn;
					variables.game_id = this.parentApplication.ApplicationType=="SCOREGAME1"?1:2;
					variables.location_id=this.parentApplication.location_id;
					submitScore.url=this.parentApplication.localURL+'/api/index.php/skytestlab/v1/score/';
					variables.score = score;
					submitScore.send(variables);
					this.parentApplication.dispatchEvent( new KioskProgressEvent(KioskProgressEvent.NOTIFY, "SUBMITTING SCORE" ));
				} else {
					this.parentApplication.dispatchEvent(new KioskError(KioskError.ERROR, "Please input a score first", "ERROR"));
				}
			}
			
			protected function httpServiceFaultHandler(event:FaultEvent):void
			{
				this.parentApplication.dispatchEvent(new KioskError(KioskError.ERROR, event.fault.faultString, "NETWORK ERROR"));
			}
			
			protected function publishScoreResultHandler(e:ResultEvent):void
			{
				Console.log( e.result, this );
				var result:Object = JSON.parse( e.result as String ) as Object;
				Console.log( result, this);
				if (result.result!="OK")
				{					
					
					this.parentApplication.dispatchEvent(new KioskError(KioskError.ERROR, result.message, "COMMUNICATION ERROR"));
					
					
					
					
				} else {
					this.parentApplication.dispatchEvent( new ViewEvent( ViewEvent.LOCATION_GAME_COMPLETE ) );
				}
				

			}
			
			protected function getPrefs_resultHandler(e:ResultEvent):void
			{
				trace("getprefs result");
				Console.log( e.result, this );
				var result:Object = JSON.parse( e.result as String ) as Object;
				Console.log( result, this);
				maxScore=result.max_scores[gameId];
				
				
			}
			
			protected function getPrefs_faultHandler(event:FaultEvent):void
			{
				trace("getprefs fault"+event.message.toString());
				
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:HTTPService id="submitScore" resultFormat="text" method="POST" 
					   result="publishScoreResultHandler(event)" 
					   fault="httpServiceFaultHandler(event)"/>
		<s:HTTPService id="getPrefs" resultFormat="text" method="GET" result="getPrefs_resultHandler(event)" fault="getPrefs_faultHandler(event)" url="{this.parentApplication.localURL+'/api/index.php/skytestlab/v1/preferences/'}" />
	</fx:Declarations>
	
	<s:VGroup width="100%" horizontalAlign="left" verticalAlign="middle">
		<!--s:Label text="" styleName="registrationTwo" id="theUserName" width="100%" textAlign="center"/-->
		<s:HGroup gap="20" verticalAlign="middle" rotation="90">
			<local:SkyIconBallControl visible="{ this.parentApplication.ApplicationType=='SCOREGAME1' }" includeInLayout="{ this.parentApplication.ApplicationType=='SCOREGAME1' }"/>
			<local:SkyIconReactionControl visible="{ this.parentApplication.ApplicationType=='SCOREGAME2' }" includeInLayout="{ this.parentApplication.ApplicationType=='SCOREGAME2' }"/>
		</s:HGroup>
	
		<s:VGroup>
				<s:Form>
					<s:layout>
						<s:FormLayout gap="20" paddingLeft="40"/>
					</s:layout>        
					<s:FormItem label="" id="scoreTypeLabel">
						
						<s:HGroup gap="-5">
							<!--maskedinput:MaskedTextInputField id="powerValue" width="150"/-->
							<s:TextInput skinClass="skins.text.SkyTextInputLarge" width="487.1" id="scoreValue"  />
							<s:VGroup x="-5">
								<s:Spacer height="380" />
								<s:Button id="submitPowerButton" skinClass="skins.buttons.SkyRightButton" label="SAVE" click="submitHandler(event, 0, scoreValue.text)"/>	
							</s:VGroup>
							
						</s:HGroup>
					</s:FormItem>


				</s:Form>
			</s:VGroup>
	</s:VGroup>
	
</s:Group>